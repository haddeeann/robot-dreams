{"version":3,"sources":["components/PlayButton.js","components/TextDisplay.js","components/Poem.js","App.js","reportWebVitals.js","index.js"],"names":["PlayButton","onClick","className","TextDisplay","error","searchError","children","Poem","author","lines","title","poemLines","char","length","push","App","props","state","poemTitle","poemAuthor","errorMessage","searchErrorMessage","searchTitle","seachAuthor","searchClick","bind","randomSearch","handleChangeTitle","handleChangeAuthor","this","searchUrl","searchAuthor","axios","method","url","responseType","then","response","poemResultRandom","Math","floor","random","data","setState","catch","err","event","target","value","htmlFor","type","id","onChange","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bdcecaa.chunk.js","sourcesContent":["import React from 'react';\nimport './PlayButton.css';\n\nfunction PlayButton({ onClick }) {\n    return (\n        <div>\n            <button className=\"playButton\" onClick={onClick}>Get Random Poetry</button>\n        </div>\n    );\n}\n\nexport default PlayButton;","import React from 'react';\nimport './TextDisplay.css';\n\nfunction TextDisplay({ error, searchError, children }) {\n    if(error) {\n        return (\n            <div>\n                {error}\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                {searchError}\n                {children}\n            </div>\n        );\n    }\n}\n\nexport default TextDisplay;","import React from 'react';\nimport './Poem.css';\n\nfunction Poem({ author, lines, title}) {\n    let poemLines = [];\n    for(let char = 0; char < lines.length; char++) {\n        poemLines.push(<li key={char}>{lines[char]}</li>);\n    }\n    return (\n        <div className='poem'>\n            <h3>{title}</h3>\n            <h4>{author}</h4>\n            <ul>\n                {poemLines}\n            </ul>\n        </div>\n    );\n}\n\nexport default Poem;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport PlayButton from './components/PlayButton';\nimport TextDisplay from './components/TextDisplay';\nimport Poem from './components/Poem.js';\n\nimport axios from 'axios';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            poemLines: '',\n            poemTitle: '',\n            poemAuthor: '',\n            errorMessage: '',\n            searchErrorMessage: '',\n            searchTitle: '',\n            seachAuthor: ''\n        }; \n        this.searchClick = this.searchClick.bind(this);\n        this.randomSearch = this.randomSearch.bind(this);\n        this.handleChangeTitle = this.handleChangeTitle.bind(this);\n        this.handleChangeAuthor = this.handleChangeAuthor.bind(this);\n    }\n\n    componentDidMount() {\n        this.randomSearch();\n    }\n\n    searchClick() {\n        let searchUrl = '';\n        if(this.state.searchAuthor && this.state.searchTitle) {\n            searchUrl = `https://poetrydb.org/author,title/${this.state.searchAuthor};${this.state.searchTitle}`;\n        } else if(this.state.searchAuthor) {\n            searchUrl = `https://poetrydb.org/author/${this.state.searchAuthor}`;\n        } else if(this.state.searchTitle) {\n            searchUrl = `https://poetrydb.org/title/${this.state.searchTitle}`;\n        }\n\n        axios({\n            method: 'get',\n            url: searchUrl,\n            responseType: 'json'\n          })\n            .then((response) => { \n                const poemResultRandom = Math.floor(Math.random() * (response.data.length - 1));\n                this.setState({\n                    errorMessage: '',\n                    searchErrorMessage: '',\n                    poemAuthor: response.data[poemResultRandom].author,\n                    poemLines: response.data[poemResultRandom].lines,\n                    poemTitle: response.data[poemResultRandom].title\n                });\n            })\n            .catch(() => {\n                this.setState({\n                    searchErrorMessage: `We didn't find your poem. Here's a random one.`\n                });\n                this.randomSearch();\n            });\n    }\n\n    randomSearch() {\n        let searchUrl = `https://poetrydb.org/random`;\n\n        axios({\n            method: 'get',\n            url: searchUrl,\n            responseType: 'json'\n          })\n            .then((response) => { \n                const poemResultRandom = Math.floor(Math.random() * (response.data.length - 1));\n                this.setState({\n                    errorMessage: '',\n                    poemAuthor: response.data[poemResultRandom].author,\n                    poemLines: response.data[poemResultRandom].lines,\n                    poemTitle: response.data[poemResultRandom].title\n                });\n            })\n            .catch((err) => {\n                this.setState({\n                    searchErrorMessage: '',\n                    errorMessage: `We didn't find anything and the reason is: ${err}. Click random (again) or search for a different poem.`\n                });\n            });\n    }\n\n    handleChangeTitle(event) {\n        this.setState({searchTitle: event.target.value});\n    }\n\n    handleChangeAuthor(event) {\n        this.setState({searchAuthor: event.target.value});\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <div className=\"body\">\n                    <div className='searchSideBar'>\n                        <PlayButton onClick={this.randomSearch} />\n                        <hr />\n                        <h3>Search For Poem</h3>\n                        <div>\n                            <label htmlFor='title'>\n                                Poem Title\n                                <input type='text' id='title' value={this.state.searchTitle || ''} onChange={this.handleChangeTitle}></input>\n                            </label>\n                        </div>\n                        <div>\n                            <label htmlFor='author'>\n                                Poem Author\n                                <input type='text' id='author' value={this.state.searchAuthor || ''} onChange={this.handleChangeAuthor}></input>\n                            </label>\n                        </div>\n\n                        <button className='searchButton' onClick={this.searchClick}>Search</button>\n                    </div>\n                    <TextDisplay error={this.state.errorMessage} searchError={this.state.searchErrorMessage}>\n                        <Poem author={this.state.poemAuthor} lines={this.state.poemLines} title={this.state.poemTitle} />\n                    </TextDisplay>\n                </div>\n\n                <footer>\n                    <div>Brought to you by Yummy Apps</div>\n                </footer>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}